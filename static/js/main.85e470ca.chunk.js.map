{"version":3,"sources":["Constants.js","Actions.js","components/Form.js","utils.js","components/User.js","components/UserList.js","containers/App.js","Reducers.js","index.js"],"names":["FETCH_USERS","POST_USER","DELETE_USER","SAVE_POST_DATA","API_LINK","fetchUsers","dispatch","a","axios","get","response","type","payload","data","Form","postData","useSelector","state","Post","useDispatch","saveDataToGlobalState","getFirstName","getLastName","getEmail","firstName","lastName","email","useState","name","className","onChange","target","value","placeholder","required","onClick","match","post","htmlElementCollection","document","getElementsByClassName","i","length","alert","User","usersArray","useEffect","handleOnClickRemove","id","delete","removeUser","getSingleUser","map","user","UserList","App","initState","initPostState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.85e470ca.chunk.js","sourcesContent":["export const FETCH_USERS = 'FETCH_USERS';\r\n\r\nexport const POST_USER =  'POST_USER';\r\n\r\nexport const DELETE_USER =  'DELETE_USER';\r\n\r\nexport const SAVE_POST_DATA = 'SAVE_POST_DATA';\r\n\r\nexport const API_LINK = 'https://nodeapireactredux.herokuapp.com/';","import axios from 'axios';\r\nimport { FETCH_USERS, DELETE_USER, POST_USER, SAVE_POST_DATA, API_LINK } from './Constants';\r\n\r\nexport const fetchUsers = () => {\r\n    return async (dispatch) => {\r\n        const response = await axios.get(`${API_LINK}users`)\r\n        dispatch({\r\n            type: FETCH_USERS,\r\n            payload: response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeUser = (id) => {\r\n    return async (dispatch) => {\r\n        await axios.delete(`${API_LINK}user/${id}`)\r\n        dispatch({\r\n            type: DELETE_USER\r\n        })\r\n        dispatch(fetchUsers())\r\n    }\r\n}\r\n\r\nexport const postUser = (data) => {\r\n    return async (dispatch) => {\r\n        await axios.post(`${API_LINK}post`, data)\r\n        dispatch({\r\n            type: POST_USER\r\n        })\r\n        dispatch(fetchUsers())\r\n    }\r\n}\r\n\r\nexport const savePostData = (data) => {\r\n    return (dispatch, useState) => {\r\n        dispatch({\r\n            type: SAVE_POST_DATA,\r\n            payload: data\r\n        })\r\n    } \r\n}","import React from 'react';\r\nimport './Form.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postUser, savePostData } from '../Actions';\r\nimport { ValidateEmail } from '../utils';\r\n\r\nfunction Form () {\r\n\r\n    const postData = useSelector(state => state.Post)\r\n    const dispatch = useDispatch()\r\n\r\n    const saveDataToGlobalState = (getFirstName, getLastName, getEmail) => {\r\n        dispatch(savePostData(\r\n            {\r\n                firstName: getFirstName,\r\n                lastName: getLastName,\r\n                email: getEmail\r\n            }\r\n        ))\r\n    }\r\n\r\n    const handleSaveOnChangeFirstName = (data) => {\r\n        saveDataToGlobalState(data.target.value, postData.lastName, postData.email)\r\n    }\r\n\r\n    const handleSaveOnChangeLastName = (data) => {\r\n        saveDataToGlobalState(postData.firstName, data.target.value, postData.email)\r\n    }\r\n\r\n    const handleSaveOnChangeEmail = (data) => {\r\n        saveDataToGlobalState(postData.firstName, postData.lastName, data.target.value)\r\n    }\r\n\r\n    const handlePostCall = () => {\r\n        if (ValidateEmail(postData.email)) {\r\n            dispatch(postUser(postData))\r\n            const htmlElementCollection = document.getElementsByClassName('inputFieldLabel')\r\n            for(let i=0;i<htmlElementCollection.length;i++){\r\n                htmlElementCollection[i].value = ''\r\n            }\r\n            \r\n        }else {\r\n            alert('Email you have entered is not valid')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div name='theForm' className='formParent'>\r\n                <input onChange= {handleSaveOnChangeFirstName} className='inputFieldLabel' type='text' placeholder='Enter First Name'></input>\r\n                <input onChange= {handleSaveOnChangeLastName} className='inputFieldLabel' type='text' placeholder='Enter Last Name'></input>    \r\n                <input onChange= {handleSaveOnChangeEmail} required className='inputFieldLabel' type='email' placeholder='Enter Email'></input>\r\n                <button className='submitButton' onClick={handlePostCall}>Submit</button>  \r\n            </div>\r\n        </div>\r\n    )  \r\n}\r\n\r\nexport default Form;","export const ValidateEmail = (inputText) =>{\r\n    const mailformat =/^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\r\n    if(inputText.match(mailformat)){\r\n        return true;\r\n    } else {\r\n    return false;\r\n    }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUsers, removeUser } from '../Actions';\r\nimport './User.css';\r\n\r\n\r\nfunction User () {\r\n    \r\n    const usersArray = useSelector(state => state.User)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUsers())\r\n    }, [dispatch])\r\n\r\n    const handleOnClickRemove = (id) =>{\r\n        dispatch(removeUser(id))\r\n    }\r\n\r\n    const getSingleUser = usersArray.map((user, i) => {\r\n        return (\r\n                <div key= {i+1} className='content'>\r\n                    <p key= {i+2} className='user'>{user.firstName}</p>\r\n                    <p key= {i+3} className='user'>{user.lastName}</p>\r\n                    <p key= {i+4} className='user'>{user.email}</p>\r\n                    <button id={user.id} onClick={() => handleOnClickRemove(user.id)} className='deleteButton'>Delete</button>\r\n                </div>\r\n            )\r\n        })\r\n\r\n    return(\r\n        <div className='parentUserContainer'>\r\n            {getSingleUser}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport './UserList.css';\r\nimport User from './User';\r\n\r\nfunction UserList () {\r\n\r\n    return (\r\n        <div className='bigDaddyContainer'>\r\n            <div className='parenth1Container'>\r\n                <h1 className='childElement'>First Name</h1>\r\n                <h1 className='childElement'>Last Name</h1>\r\n                <h1 className='childElement'>Email</h1>\r\n            </div> \r\n            <User/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserList;","import './App.css';\nimport Form from '../components/Form';\nimport UserList from '../components/UserList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          React Redux Mongoose MongoDB App\n        </p>\n      </header>\n      <div className='componentContainer'>\n        <Form/>\n        <UserList/>\n      </div>\n      <footer className='footer'></footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { FETCH_USERS, DELETE_USER, POST_USER, SAVE_POST_DATA  } from './Constants'\r\nconst initState = [\r\n   { \r\n        id: '', \r\n        firstName: '', \r\n        lastName: '', \r\n        email: ''\r\n    }\r\n]\r\n\r\nconst initPostState = {\r\n    firstName: '', \r\n    lastName: '', \r\n    email: ''\r\n}\r\n\r\nconst usersReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_USERS:\r\n            return action.payload;\r\n        case DELETE_USER:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst postUserReducer = (state = initPostState, action) => {\r\n    switch(action.type) {\r\n        case POST_USER:\r\n            return state;\r\n        case SAVE_POST_DATA:\r\n            return action.payload      \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n    User: usersReducer,\r\n    Post: postUserReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore} from 'redux';\nimport { rootReducer } from './Reducers'\nimport thunk from 'redux-thunk';\n\n \nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}